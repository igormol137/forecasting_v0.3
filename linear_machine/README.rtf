{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 O arquivo `sliding_window_v2.py` apresenta o c\'f3digo que define e treina um modelo de regress\'e3o linear utilizando a abordagem de janela deslizante para prever s\'e9ries temporais. Inicialmente, as vari\'e1veis de tempo e quantidade s\'e3o extra\'eddas dos dados de treinamento e transformadas em vetores unidimensionais. Uma fun\'e7\'e3o que implementa a abordagem de janela deslizante \'e9 definida, treinando o modelo de regress\'e3o em cada janela de dados e efetuando previs\'f5es para o horizonte subsequente. Esse processo \'e9 repetido continuamente, deslocando a janela de treinamento ao longo do conjunto de dados. Em conclus\'e3o, o c\'f3digo exibe dois gr\'e1ficos: um que compara as previs\'f5es do modelo com a s\'e9rie temporal original e outro que demonstra a tend\'eancia do erro quadr\'e1tico m\'e9dio em diferentes janelas.\
\
O script `random_forests.py` emprega a t\'e9cnica de Floresta Aleat\'f3ria para prever s\'e9ries temporais. Primeiramente, os dados s\'e3o preparados para a previs\'e3o por meio da cria\'e7\'e3o de grupos cont\'edguos, denominados 'janelas', e gera vetores de caracter\'edsticas e alvos. Em seguida, realiza-se uma valida\'e7\'e3o cruzada para dividir a s\'e9rie em conjuntos de treinamento e teste, respeitando a ordem temporal dos dados. A Floresta Aleat\'f3ria \'e9 ent\'e3o iniciada, treinando o modelo e fazendo previs\'f5es. Os valores previstos e os dados originais, juntamente com o erro quadr\'e1tico m\'e9dio de cada previs\'e3o, s\'e3o armazenados. Um gr\'e1fico dos resultados \'e9 tra\'e7ado ao final.\
\
O arquivo `out_of_sample_unit_of_time.py` implementa a fun\'e7\'e3o 'optimal_time_unit' com o objetivo de encontrar a melhor unidade de tempo para o modelo de s\'e9rie temporal. A fun\'e7\'e3o come\'e7a com 'errors', uma lista que armazenar\'e1 os erros quadrados m\'e9dios, verifica se a unidade de tempo \'e9 menor que o total de pontos na s\'e9rie e aplica uma janela deslizante para calcular a m\'e9dia dos pontos de dados. Os conjuntos X e Y s\'e3o divididos em rotinas de treinamento e testes, um modelo de regress\'e3o linear \'e9 ajustado, utilizado para fazer previs\'f5es e calcular o erro quadrado m\'e9dio. O erro para cada unidade de tempo \'e9 armazenado e, no final, a fun\'e7\'e3o retorna a unidade de tempo com o menor erro. Um gr\'e1fico \'e9 gerado para a observa\'e7\'e3o do erro versus o tamanho da janela, e a fun\'e7\'e3o \'e9 invocada considerando unidades de tempo entre 1 e 60.\
\
O script `out_of_sample_optimal_horizon.py` \'e9 utilizado para analisar uma s\'e9rie temporal, encontrar o horizonte de previs\'e3o ideal e visualizar os resultados. O primeiro bloco de c\'f3digo define duas fun\'e7\'f5es, 'linear_regression_model', que treina um modelo de regress\'e3o linear a partir de um dataframe, e 'find_optimal_horizon', que itera sobre diferentes horizontes de previs\'e3o para encontrar aquele que produz o menor erro quadr\'e1tico m\'e9dio. Uma terceira fun\'e7\'e3o, 'plot_model_performance', \'e9 ent\'e3o usada para tra\'e7ar o erro de previs\'e3o versus o horizonte de previs\'e3o. A \'faltima parte do c\'f3digo aplica essas fun\'e7\'f5es aos dados de treinamento, imprime o horizonte ideal e exibe os resultados.\
\
Por fim, o script `optimal_unit_of_time.py` realiza uma an\'e1lise de s\'e9rie temporal com o objetivo de encontrar a unidade de tempo \'f3tima para agrupar os dados e treinar um modelo de regress\'e3o linear. Os dados s\'e3o primeiramente ordenados cronologicamente. Uma fun\'e7\'e3o \'e9 ent\'e3o definida que agrupa os dados em unidades de tempo especificadas, treina um modelo de regress\'e3o linear, faz previs\'f5es e calcula o erro quadr\'e1tico m\'e9dio (MSE). Um intervalo de unidades de tempo \'e9 definido para testar o desempenho do modelo e os resultados s\'e3o plotados em um gr\'e1fico. A fun\'e7\'e3o retorna a unidade de tempo que resulta no menor MSE.\
}